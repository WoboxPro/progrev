services:
  frontend:
    build:
      context: ./apps/frontend
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=development
      - NUXT_HOST=0.0.0.0
      - NUXT_PORT=3000
      - CHOKIDAR_USEPOLLING=true
    ports:
      - "3000:3000"
    volumes:
      - ./apps/frontend:/app
      - /app/node_modules
    command: sh -c "npm install && npm run dev"

  php:
    build:
      context: ./apps/backend
      dockerfile: Dockerfile
    working_dir: /var/www/html
    volumes:
      - ./apps/backend:/var/www/html
    depends_on:
      postgres:
        condition: service_healthy
    expose:
      - "9000"
    healthcheck:
      test: ["CMD", "php", "-v"]
      interval: 10s
      timeout: 3s
      retries: 5

  nginx:
    image: nginx:alpine
    depends_on:
      - php
    ports:
      - "8000:80"
    volumes:
      - ./apps/backend:/var/www/html:ro
      - ./infra/nginx:/etc/nginx/conf.d:ro

  postgres:
    image: postgres:17-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: app
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB} -h localhost"]
      interval: 5s
      timeout: 3s
      retries: 10
      start_period: 5s

volumes:
  pgdata:


